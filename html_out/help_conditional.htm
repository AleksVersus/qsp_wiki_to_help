<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//RU">
<html lang="ru">
<head>
<meta charset="utf-8"/>
<meta content="width=device-width, initial-scale=1.0" name="viewport"/>
<title>Условия [Документация QSP]</title>
<link href="default.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div class="page group">
<!-- wikipage start -->
<!-- TOC START -->

<!-- TOC END -->
<p>
<a class="wikilink1" href="help_tuples.htm" title="help:tuples">Назад: Кортежи</a>
</p>
<h1 class="sectionedit1" id="uslovija">Условия</h1>
<div class="level1">
<p>
Условия — это такие особые конструкции в <strong>QSP</strong>, которые позволят сделать вашу игру по настоящему интерактивной. Они позволяют разветвлять события, происходящие в игре в зависимости от уже сложившихся условий, и таким образом вносить разнообразие в игровой процесс. Операторы, которые используются в конструкциях условий, в программировании называются <strong>операторами ветвления</strong>.
</p>
</div>
<h2 class="sectionedit2" id="operatory_uslovij">Операторы условий</h2>
<div class="level2">
<ul>
<li class="level1"><div class="li"> <code id="statement_IF">IF</code> — основной оператор для записи конструкций условий. Конструкции, записываемые с помощью этого оператора (назовём их "простыми условиями"), имеют две формы: однострочную и многострочную, — и в общем виде выглядят так: <pre class="brush: qsp">
! однострочная форма записи
IF [#выражение]: {команда 1} &amp; {команда 2} &amp; …
! многострочная форма записи
IF [#выражение]:
  {команда 1}
  {команда 2}
  …
END
</pre> В данном случае, если верно условие <code>[#выражение]</code>, выполняются команды <code>{команда 1}</code>, <code>{команда 2}</code> и т.д. Для однострочной формы записи это будут только те команды, которые идут в той же строке, что и оператор <code>IF</code> до конца строки; а для многострочной формы записи это будут те команды, которые идут в последующих строках после двоеточия и до специального ключевого слова <code>END</code>.</div>
<ul>
<li class="level2"><div class="li"> В качестве условия могут выступать операции сравнения, логические операции и иные выражения, возвращающие числовые значения.</div>
</li>
<li class="level2"><div class="li"> Ключевое слово <code>END</code> при многострочной форме записи должно стоять отдельной строкой.</div>
</li>
<li class="level2"><div class="li"> Если условие <code>[#выражение]</code> не верно, команды выполнены не будут.</div>
</li>
<li class="level2"><div class="li"> Примеры однострочной формы записи условий: <pre class="brush: qsp">
! если сумма a и b равна двум,
! переменной c присваивается значение 30
if a+b=2: c=30
! Если в инвентаре нет апельсина, выводится текст
if no obj "Апельсин": pl "У Вас нет апельсина."
! это тоже простая однострочная форма
if ((a+b)/c)=45+54 or (b&lt;5 or c&gt;45) and no obj 'лопата' and $f=$vvv+'RRRRR': p 'OK' &amp; goto 'Next'
</pre></div>
</li>
<li class="level2"><div class="li"> Примеры многострочной формы записи условий: <pre class="brush: qsp">
if библиотека = 0:
  узнал_о_тусовке = 0
  библиотека_вернулся = 1
  gt 'библиотека'
end
if a+b=2:
  c=30
end
</pre> </div>
</li>
<li class="level2"><div class="li"> <strong>Обратите внимание!!!</strong> При многострочной форме записи после двоеточия в той же строке, в какой находится оператор <code>IF</code>, не должны идти никакие команды, иначе плеер посчитает такой оператор условия однострочным, и команды в последующих строках будут выполняться в любом случае, независимо от того, верным окажется условие или нет. Пример такой ошибочной записи: <pre class="brush: qsp">
if библиотека = 0: узнал_о_тусовке = 0
  библиотека_вернулся = 1 &amp;! эта строчка будет выполняться в независимости от верности условия
  gt 'библиотека' &amp;! и эта
end &amp;! ключевое слово end - просто игнорируется
</pre></div>
</li>
</ul>
</li>
<li class="level1"><div class="li"> <code id="statement_ELSE">ELSE</code> — ключевое слово, использующееся совместно с оператором <code>IF</code>, и которое служит для предоставления альтернативы, если условие не выполнено. Ключевое слово <code>ELSE</code> так же имеет две формы записи: однострочную и многострочную. Многострочную форму записи <code>ELSE</code> можно использовать только в многострочной конструкции оператора <code>IF</code>, тогда как однострочную форму записи можно использовать как в однострочной, так и в многострочной, конструкции оператора <code>IF</code>. Общая форма записи: <pre class="brush: qsp">
! однострочная форма записи
IF [#выражение]: {команда д1} &amp; {команда д2} &amp; … ELSE {команда н1} &amp; {команда н2} &amp; …

! в многострочном IF
! многострочная форма ELSE
IF [#выражение]:
    {команда д1}
    {команда д2}
    ...
ELSE
    {команда н1}
    {команда н2}
    ...
END
! однострочная форма ELSE
IF [#выражение]:
    {команда д1}
    {команда д2}
    ...
ELSE {команда н1} &amp; {команда н2} &amp; ...
    ! команды в следующих строках
    ! до END игнорируются
END
</pre> Здесь, если условие<code>[#выражение]</code> верно, выполняются команды от двоеточия до ключевого слова <code>ELSE</code>, а если условие <code>[#выражение]</code> не верно, выполняются команды от ключевого слова <code>ELSE</code> и до конца конструкции условия.</div>
<ul>
<li class="level2"><div class="li"> После <code>ELSE</code> можно ставить, а можно не ставить двоеточие.</div>
</li>
<li class="level2"><div class="li"> При однострочной форме записи:</div>
<ul>
<li class="level3"><div class="li"> и команды и ключевое слово <code>ELSE</code> должны быть записаны в одной строке</div>
</li>
<li class="level3"><div class="li"> окончанием альтернативного списка команд является конец строки.</div>
</li>
<li class="level3"><div class="li"> если однострочная форма записи <code>ELSE</code> используется в многострочной форме записи <code>IF</code>, все команды, которые идут в последующих строках после <code>ELSE</code> до <code>END</code> игнорируются.</div>
</li>
<li class="level3"><div class="li"> Примеры однострочной записи: <pre class="brush: qsp">
! если сумма a и b равна двум, переменной c присваивается значение 30
! в противном случае (то есть если сумма a и b не равна двум)
! переменной c присваивается значение 10
if a+b=2: c=30 else c=10
! в зависимости от того есть ли в инвентаре апельсин
! выводится соответствующий текст
if obj "Апельсин": pl "У Вас есть апельсин." else pl "У Вас нет апельсина."
! однострочная форма else внутри многострочной if
if $левая_рука = 'Великий меч':
    gosub 'atack', 300
    gosub 'health.prove'
    gosub 'win.prove'
else gosub 'atack', atack_power
end
</pre></div>
</li>
</ul>
</li>
<li class="level2"><div class="li"> При многострочной форме записи:</div>
<ul>
<li class="level3"><div class="li"> все команды должны идти в последующих строках после <code>ELSE</code>;</div>
</li>
<li class="level3"><div class="li"> Примеры многострочной записи: <pre class="brush: qsp">
if a+b=2:
  c=30
else
  c=10
end
if obj "Апельсин":
  pl "У Вас есть апельсин."
else
  pl "У Вас нет апельсина."
end
if len($curtoken) &gt; 0:
  $tokens[curtoken_num] = $curtoken tokens_count = curtoken_num + 1
else
    tokens_count = curtoken_num
end
</pre></div>
</li>
</ul>
</li>
</ul>
</li>
<li class="level1"><div class="li"> <code id="statement_ELSEIF">ELSEIF</code> — ключевое слово, которое используется совместно с оператором <code>IF</code> и позволяет определять на одном уровне вложенности последовательно-исключающие условия. Ключевое слово <code>ELSEIF</code> имеет однострочную и многострочную формы записи. Многострочную форму записи можно использовать только в многострочных конструкциях с оператором <code>IF</code>, а однострочную — как в многострочных, так и в однострочных конструкциях с оператором <code>IF</code>. Общие формы записи: <pre class="brush: qsp">
! однострочная в однострочном условии
IF [#выражение 1]: {набор команд 1} ELSEIF [#выражение 2]: {набор команд 2} ELSE {последний набор команд}
! многострочная в многострочном условии
IF [#выражение 1]:
  {набор команд 1}
  …
ELSEIF [#выражение 2]:
  {набор команд 2}
  …
ELSEIF … :
  …
ELSE
  {последний набор команд}
  …
END

! однострочная в многострочном условии 
IF [#выражение 1]:
  {набор команд 1}
  …
ELSEIF [#выражение 2]: {набор команд 2} &amp; …
ELSEIF … : …
ELSE {последний набор команд}
END
</pre> Работает это следующим образом. Если <code>[#выражение 1]</code> верно, выполняются команды <code>{набор команд 1}</code>. Если <code>[#выражение 1]</code> неверно, но верно <code>[#выражение 2]</code>, выполняются команды <code>{набор команд 2}</code>, и т.д. И только если неверны все выражения в текущей конструкции условия, выполнятся команды после <code>ELSE</code>. Верность выражения <code>[#выражение 1]</code> не исключает верности выражения <code>[#выражение 2]</code>, однако верность выражения <code>[#выражение 2]</code> исключает верность выражения <code>[#выражение 1]</code>.<br/>
Особенности записи <code>ELSEIF</code>:</div>
<ul>
<li class="level2"><div class="li"> Может использоваться вариант написания <code>ELSE IF</code>. Работает точно так же.</div>
</li>
<li class="level2"><div class="li"> Если в многострочной конструкции <code>IF</code> после <code>ELSEIF</code> операторы идут в той же самой строке (однострочная форма), то все последующие строки игнорируются до следующего <code>ELSEIF</code>, либо до <code>ELSE</code> или <code>END</code>.</div>
</li>
<li class="level2"><div class="li"> В конструкции <code>IF</code> c <code>ELSEIF</code> может как присутствовать, так и отсутствовать часть с <code>ELSE</code>.</div>
</li>
<li class="level2"><div class="li"> Примеры: <pre class="brush: qsp">
IF ОЧКИ&gt;124:
  GOTO 'КОН3'
ELSEIF ОЧКИ&gt;99:
  GOTO 'КОН4'
ELSE
  GOTO 'КОН5'
END

if money mod 10=1 and money mod 100&lt;&gt;11:
  *pl "У вас &lt;&lt;money&gt;&gt; монета."
elseif money mod 10&gt;1 and money mod 10&lt;5 and (money mod 100&lt;5 or money mod 100&gt;20):
  *pl "У вас &lt;&lt;money&gt;&gt; монеты."
elseif money mod 10=0 or money mod 10&gt;4 or (money mod 100&gt;10 and money mod 100&lt;21):
  *pl "У вас &lt;&lt;money&gt;&gt; монет."
end
</pre> Пример записи <code>ELSEIF</code> с операторами в той же строке: <pre class="brush: qsp">
if r = 0:
  'Вариант 0'
  elseif r = 1: 'Вариант 1'
  elseif r = 2: 'Вариант 2'
  elseif r = 3: 'Вариант 3'
  else: 'Без вариантов'
end
</pre></div>
</li>
</ul>
</li>
<li class="level1"><div class="li"> <code id="statement_END">END</code> — ключевое слово, которое указывает на конец многострочной конструкции условия. Допускается запись <code>END IF</code>. Не используется для однострочных форм записи.</div>
</li>
</ul>
<p>
Для многострочных форм записи допускается вложенность неограниченной глубины. Каждый уровень вложения должен заканчиваться своей строкой <code>END</code>.
</p>
<p>
Некоторые примеры:
</p>
<p>
</p><pre class="brush: qsp">
if a+b&lt;3 or y=8:
  p 'A+B&lt;3 или Y=8'
  nl 
  if j=88: nl &amp; p 'NEXT' 
  if $h='ooo':
    p 'loo' &amp; jump 'lll'
  end
end
</pre>
<p>
</p><pre class="brush: qsp">
if a = 0:
  'abc1234'
  if b = 0: '0' else '1'
  if j = 88: nl &amp; p 'NEXT'
  if $h='ooo':
    p 'loo' &amp; jump 'lll'
  else
    p 'sample text'
    v = 8
  end
  1234
else:
  '01234'
  g = 78
end
</pre>
<p>
</p><pre class="brush: qsp">
if ((a+b)/c)=45+54 or (b&lt;5 or c&gt;45) and no obj 'лопата' and $f=$vvv+'RRRRR': p 'OK' &amp; goto 'Next'
if был_здесь[$curloc]: exit
if a&lt;3: jump 'sss'
if $имя = '': msg 'Введите имя!' &amp; jump 'ввод'
if a+b=2:c=30 &amp; gt 'next' else c=10
</pre>
<p>
Пример реализации однострочного варианта <code>ELSEIF</code>:
</p>
<p>
</p><pre class="brush: qsp">
if n=0: *pl "Ноль" elseif n=1: *pl "Один" elseif n=2: *pl "Два"
</pre>
<p>
Несколько примеров неверной записи:
</p>
<p>
</p><pre class="brush: qsp">
! в этом случае, если условие не будет выполнено,
! плеер проигнорирует только команду k1=34
! поскольку посчитает, что это однострочное условие
if abcd=3: k1=34
    k2=35 &amp; ! эта команда будет выполняться всегда
    k3=36 &amp; ! эта комнада будет выполняться всегда
end &amp; ! этот end будет проигнорирован
</pre>
<p>
</p><pre class="brush: qsp">
! данная строка выведет ошибку "неизвестное действие"
! так как однострочные формы записи не должны оканчиваться end`ом
if abcd=3: k1=34 else k1=25 end
</pre>
<p>
Пример использования однострочных <code>ELSEIF</code> и <code>ELSE</code> (аналог <code>CASE</code> на <strong>QSP</strong>):
</p>
<p>
</p><pre class="brush: qsp">
if 0:
    elseif z = 0: y = x * 100
    elseif z = 1: y = x * 99
    elseif z = 2: y = x * 88
    elseif z = 3: y = x * 77
    else: y = x * 11
end
</pre>
</div>
<h2 class="sectionedit3" id="funkcii_obrabotki_uslovij">Функции обработки условий</h2>
<div class="level2">
<ul>
<li class="level1"><div class="li"> <code id="func_IIF">IIF([#выр],[выр_да],[выр_нет])</code> - возвращает значение выражения <code>[выр_да]</code>, если <code>[#выр]</code> верно, иначе возвращает значение выражения <code>[выр_нет]</code>.</div>
<ul>
<li class="level2"><div class="li"> Эта функция в <strong>QSP</strong> является аналогом <strong>тернарного оператора</strong> в других языках программирования.</div>
</li>
<li class="level2"><div class="li"> Из выражений <code>[выр_да]</code> и <code>[выр_нет]</code> будет вычислено только одно, в зависимости от того, будет ли выполнено условие.</div>
</li>
<li class="level2"><div class="li"> Примеры: <pre class="brush: qsp">
!Модуль числа
abs_x=iif(x&gt;0,x,-x)
!А следующая конструкция НЕ вызовет ошибку деления на ноль:
set x=0 y=iif(x=0,0,1/x)
! типичное решение для вывода времени, чтобы не терять ноль на часах:
$iif(hour&gt;9,$str(hour),"0"+$str(hour))+":"+$iif(minute&gt;9,$str(minute),"0"+$str(minute))
</pre> </div>
</li>
<li class="level2"><div class="li"> Эквивалентность конструкций условия c оператором <code>IF</code> и функции <code>IIF</code>: <pre class="brush: qsp">
if number mod 2 = 0:
  *pl "Число чётное"
else
  *pl "Число нечётное"
end
! эквивалентно
*pl $iif(number mod 2 = 0,"Число чётное","Число не чётное")
</pre></div>
</li>
</ul>
</li>
</ul>
<p>
<a class="wikilink1" href="help_organizing.htm" title="help:organizing">Вперёд: Пользовательские функции и процедуры</a>
</p>
</div>

<!-- wikipage stop -->
</div></body>
</html>