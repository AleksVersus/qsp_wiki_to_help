<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//RU">
<html lang="ru">
<head>
<meta charset="utf-8"/>
<meta content="width=device-width, initial-scale=1.0" name="viewport"/>
<title>Циклы [Документация QSP]</title>
<link href="default.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div class="page group">
<!-- wikipage start -->
<!-- TOC START -->

<!-- TOC END -->
<p>
<a class="wikilink1" href="help_coding.htm" title="help:coding">Назад: Программный код</a>
</p>
<h1 class="sectionedit1" id="cikly">Циклы</h1>
<div class="level1">
</div>
<h2 class="sectionedit2" id="osnovnaja_informacija">Основная информация</h2>
<div class="level2">
<p>
<strong>Циклы</strong> — это особые конструкции в программе, которые многократно выполняют определённый кусочек кода.
</p>
<p>
Например, чтобы вывести на экран числа с 1 по 15, не обязательно пятнадцать раз писать команду <code>*P</code>, можно использовать цикл:
</p>
<p>
</p><pre class="brush: qsp">
loop i=1 while i&lt;=15 step i+=1:
    *p "&lt;&lt;i&gt;&gt;, "
end
</pre>
<p>
Для организации циклов в <strong>QSP</strong> используется оператор <strong id="statement_LOOP">loop</strong>, состоящий из трёх ключевых слов. Общая запись выглядит так:
</p>
<pre class="brush: qsp">
LOOP {команды до начала цикла} WHILE [#условие] STEP {команды в конце итерации}:
    {операторы тела цикла}
END
</pre>
<p>
Здесь:
</p>
<ul>
<li class="level1"><div class="li"> <code>{команды до начала цикла}</code> — это команды, выполняемые до того, как цикл будет запущен. Данные команды относятся к блоку цикла, но не попадают в итерации (проходы), т.е. выполняются только один раз (не являются телом цикла). Здесь можно, например, объявить счётчик цикла. И здесь можно писать множество команд, перечисляя их через разделитель <code>&amp;</code> (амперсанд).</div>
</li>
<li class="level1"><div class="li"> <code>[#условие]</code> — это выражение, по значению которого проверяется условие, при котором цикл будет выполняться. Здесь могут использоваться операции сравнения и логические операции в любых связках. В случае, если значение выражения <code>[#условие]</code> равно нулю, цикл прерывается.</div>
</li>
<li class="level1"><div class="li"> <code>{команды в конце итерации}</code> — это команды, выполняемые в конце каждого прохода цикла. Сюда можно помещать команды, которые не относятся напрямую к телу цикла, но тем не менее должны быть выполнены на каждой итерации. Здесь можно, например, изменять значение счётчика цикла. На самом деле здесь можно писать множество команд, перечисляя их через разделитель <code>&amp;</code> (амперсанд).</div>
</li>
<li class="level1"><div class="li"> <code>{операторы тела цикла}</code> — это команды, которые необходимо выполнять на каждом проходе. Они являются основными для цикла. То есть мы создаём цикл именно ради этих команд.</div>
</li>
</ul>
<p>
Цикл в <strong>QSP</strong> — это отдельный блок кода (так же как и <strong>действие</strong> <code><strong><a class="wikilink1" href="help_acts.htm" title="help:acts">ACT</a></strong></code>), и это значит, что внутри цикла мы можем объявить локальные переменные. Это очень удобно, потому что мы можем объявить локальную переменную для счётчика, что не повлияет на остальные переменные на локации:
</p>
<p>
</p><pre class="brush: qsp">
i=99
*pl "i до цикла &lt;&lt;i&gt;&gt;"
loop local i=0 &amp; *p "i в цикле: " while i&lt;6 step i+=1:
    *p "&lt;&lt;i&gt;&gt;, "
end
*nl "i после цикла &lt;&lt;i&gt;&gt;"
</pre>
<p>
Циклы очень удобно использовать для перебора массивов. Например, с помощью цикла можно сложить все числа, хранящиеся в массиве:
</p>
<p>
</p><pre class="brush: qsp">
summ=0 &amp; ! сюда будем записывать сумму чисел
! наши числа лежат в массиве mass
loop local i,size = 0,arrsize('mass') while i&lt;size step i+=1:
    summ += mass[i]
end
*pl 'Сумма всех элементов массива mass: &lt;&lt;summ&gt;&gt;'
</pre>
<p>
У циклов нет собственных массивов <code>args</code> и <code>result</code>, они используют <code>args</code> и <code>result</code> локации (или другого блока кода), на которой расположены.
</p>
</div>
<h2 class="sectionedit3" id="vidy_ciklov">Виды циклов</h2>
<div class="level2">
<p>
В программировании существуют три основных вида циклов:
</p>
<ul>
<li class="level1"><div class="li"> Цикл с предусловием</div>
</li>
<li class="level1"><div class="li"> Цикл с постусловием</div>
</li>
<li class="level1"><div class="li"> Цикл со счётчиком</div>
</li>
</ul>
<p>
<strong>Цикл с предусловием</strong> — это такой цикл, в котором сначала проверяется условие выполнения, и только если условие соблюдается, производится итерация. Именно циклы подобного вида мы и рассматривали выше. Вот ещё пример:
</p>
<p>
</p><pre class="brush: qsp">
$text='Выводим текст в столбик'
! сначала проверяется условие
loop while len($text)&gt;0:
    ! и лишь затем выполняется тело цикла
    *pl $mid($text,1,1)
    if len($text)=1:
        $text=''
    else:
        $text=$mid($text,2)
    end
end
</pre>
<p>
<strong>Цикл с постусловием</strong> — это такой цикл, в котором сначала производится итерация (то есть выполняется тело цикла), и лишь затем проверяется условие. Такие циклы более редки, но всё же необходимы. В <strong>QSP</strong> не предусмотрена отдельная конструкция для таких циклов, поэтому приходится несколько изменять само тело цикла, чтобы цикл работал правильно.
</p>
<p>
</p><pre class="brush: qsp">
loop local run=1 while run:
    ! сначала выполняется тело цикла
    $name=$input('Введите ваше имя:')
    ! и лишь затем проверяется условие
    if $name&lt;&gt;'': run=0
end
</pre>
<p>
Данный цикл можно изменить вот так, чтобы убрать условие из тела цикла:
</p>
<p>
</p><pre class="brush: qsp">
loop local run=1 while run step run=iif($name&lt;&gt;'',0,1):
    ! сначала выполняется тело цикла
    $name=$input('Введите ваше имя:')
    ! и лишь затем проверяется условие (в Step)
end
</pre>
<p>
<strong>Цикл со счётчиком</strong> — в циклах такого вида обязательно присутствует переменная, отвечающая за счёт: переменная-счётчик. Переменная счётчик может увеличиваться на каждом проходе, или уменьшаться, изменяться на разные величины, но в любом случае она изменяется с каждым проходом:
</p>
<p>
</p><pre class="brush: qsp">
! выводим каждое десятое число от 230 и заканчивая 402
loop local i=230 while i&lt;=402 step i+=10:
    *p "&lt;&lt;i&gt;&gt;, "
end

! выводим в обратном порядке каждый третий элемент массива mass
loop local i=arrsize('mass') while i&gt;0 step i-=3:
    mass[i-1]
end
</pre>
</div>
<h2 class="sectionedit4" id="vyxod_iz_serediny_preryvanie_cikla">Выход из середины. Прерывание цикла</h2>
<div class="level2">
<p>
Чтобы в любой момент прервать выполнение цикла, нужно использовать оператор <code>JUMP</code> и "прыжок" на метку вне цикла:
</p>
<p>
</p><pre class="brush: qsp">
$text='Выводим текст в столбик'
! сначала проверяется условие
loop local $s while len($text)&gt;0:
    $s=$mid($text,1,1)
    if $s='к': jump 'end_of_cycle'
    *pl $s
    if len($text)=1:
        $text=''
    else
        $text=$mid($text,2)
    end  
end
:end_of_cycle
</pre>
<p>
</p><pre class="brush: qsp">
loop while 1:
    $name=$input('Введите ваше имя:')
    if $name&lt;&gt;'': jump 'out'
end
:out
</pre>
<p>
<a class="wikilink1" href="help_arrays.htm" title="help:arrays">Вперёд: Массивы</a>
</p>
</div>

<!-- wikipage stop -->
</div></body>
</html>