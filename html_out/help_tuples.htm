<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//RU">
<html lang="ru">
<head>
<meta charset="utf-8"/>
<meta content="width=device-width, initial-scale=1.0" name="viewport"/>
<title>Кортежи [Документация QSP]</title>
<link href="default.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div class="page group">
<!-- wikipage start -->
<!-- TOC START -->

<!-- TOC END -->
<p>
<a class="wikilink1" href="help_regexp.htm" title="help:regexp">Назад: Регулярные выражения</a>
</p>
<h1 class="sectionedit1" id="kortezhi">Кортежи</h1>
<div class="level1">
<p>
<strong>QSP</strong> позволяет упаковывать несколько значений в одну переменную, а затем извлекать их оттуда. Упакованные данные называются “<strong>кортеж</strong>”.
</p>
<p>
Чтобы создать кортеж, нужно присвоить переменной, имя которой начинается с символа <code>%</code>, группу значений, перечисленных в квадратных скобках через запятую. Пример:
</p>
<p>
</p><pre class="brush: qsp">
! создаём кортеж
%personage = ["Петя", 27, 182, 92, "боксёр"]
</pre>
<p>
Когда мы создаём кортеж, это называется <strong>упаковкой</strong> данных. Обратный процесс называется <strong>распаковкой</strong>:
</p>
<p>
</p><pre class="brush: qsp">
! распаковываем данные из кортежа
$name, age, height, weight, $sports = %personage
</pre>
<p>
Кортежи можно помещать и в отдельные ячейки массивов:
</p>
<p>
</p><pre class="brush: qsp">
%personage[0] = ["Петя", 27, 182, 92, "боксёр"]
%personage[1] = ["Вася", 32, 162, 57, "жокей"]
%personage[2] = ["Маша", 19, 158, 42, "фигуристка"]
%personage[3] = ["Даша", 24, 202, 81, "баскетболистка"]
</pre>
<p>
В кортежи можно помещать значения любых типов, в том числе и другие кортежи:
</p>
<p>
</p><pre class="brush: qsp">
%unit = [187, 94, 'steel', [0, 2]]
</pre>
<p>
Допустимо использовать круглые скобки <code>()</code> для перечисления значений кортежа, однако рекомендуется использовать именно квадратные скобки <code>[]</code> для улучшения читаемости кода.
</p>
<p>
</p><pre class="brush: qsp">
%q = (65,'ddd')  
%q = () &amp; ! пустой кортеж  
%q = (56, (32,'sdsd'), 3)
</pre>
<p>
Так же допустимо совсем опускать скобки при присваивании значений кортежу, однако такая запись тоже не рекомендуется, потому что плохо читаема:
</p>
<p>
</p><pre class="brush: qsp">
%q = 65,'ddd'  
local %q = 65,'ddd',33
</pre>
</div>
<h2 class="sectionedit2" id="operacii_s_kortezhami">Операции с кортежами</h2>
<div class="level2">
</div>
<h3 class="sectionedit3" id="obedinenie_kortezhej_konkatenacija">Объединение кортежей (конкатенация) &amp;</h3>
<div class="level3">
<p>
Для объединения кортежей в один кортеж нужно использовать операцию конкатенации. Общая запись:
</p>
<p>
</p><pre class="brush: qsp">
[%новый_кортеж] = ([%кортеж_1] &amp; [%кортеж_2] &amp; ...)
</pre>
<p>
В данном случае ставить скобки обязательно. Только так плеер поймёт, что это операция конкатенации, а не перечисление команд через амперсанд <code>&amp;</code>.
</p>
<p>
Пример:
</p>
<p>
</p><pre class="brush: qsp">
%tpl = ([1, 2] &amp; [3, 4])
! в переменную %tpl будет записан кортеж [1, 2, 3, 4]
</pre>
</div>
<h3 class="sectionedit4" id="uvelichenie_znachenij_kortezha">Увеличение значений кортежа +</h3>
<div class="level3">
<p>
Общая запись:
</p>
<p>
</p><pre class="brush: qsp">
[%новый_кортеж] = [%кортеж_1] + [значение]
</pre>
<p>
При выполнении данной операции к каждому элементу кортежа <code>[%кортеж_1]</code> будет прибавлен элемент <code>[значение]</code>. <code>[значение]</code> может быть кортежем, тогда каждый элемент <code>[%кортеж_1]</code> будет сложен с кортежем <code>[%значение]</code>. Примеры:
</p>
<p>
</p><pre class="brush: qsp">
%tuple = [4, 10, 16]
%a = %tuple + 2
! %a будет равно [6, 12, 18]

[4, 10] + ['b', 'x'] &amp; ! [4 + ['b', 'x'], 10 + ['b', 'x']]
! [['4b','4x'], ['10b','10x']]
</pre>
</div>
<h3 class="sectionedit5" id="umenshenie_znachenij_kortezha">Уменьшение значений кортежа -</h3>
<div class="level3">
<p>
Общая запись:
</p>
<p>
</p><pre class="brush: qsp">
[%новый_кортеж] = [%кортеж_1] - [#значение]
</pre>
<p>
При выполнении данной операции из каждого элемента кортежа <code>[%кортеж_1]</code> будет вычтен элемент <code>[#значение]</code>. <code>[#значение]</code> может быть только числом. Все остальные варианты приведут к ошибке о несоответствии типов данных. Примеры:
</p>
<p>
</p><pre class="brush: qsp">
%tuple = [4, 10, 16]
%a = %tuple - 2
! %a будет равно [2, 8, 14]

[4, 10] - ['b', 'x'] &amp; ! ошибка о несоответствии типов данных
</pre>
</div>
<h3 class="sectionedit6" id="uvelichenie_znachenij_kortezha1">Увеличение значений кортежа *</h3>
<div class="level3">
<p>
Общая запись:
</p>
<p>
</p><pre class="brush: qsp">
[%новый_кортеж] = [%кортеж_1] * [#значение]
</pre>
<p>
При выполнении данной операции каждый элемент кортежа <code>[%кортеж_1]</code> будет умножен на значение элемента <code>[#значение]</code>. <code>[#значение]</code> может быть только числом. Все остальные варианты приведут к ошибке о несоответствии типов данных. Примеры:
</p>
<p>
</p><pre class="brush: qsp">
%tuple = [4, 10, 16]
%a = %tuple * 2
! %a будет равно [8, 20, 32]

[4, 10] * 'b' &amp; ! ошибка о несоответствии типов данных
</pre>
</div>
<h3 class="sectionedit7" id="sokraschenie_znachenij_kortezha">Сокращение значений кортежа /</h3>
<div class="level3">
<p>
Общая запись:
</p>
<p>
</p><pre class="brush: qsp">
[%новый_кортеж] = [%кортеж_1] / [#значение]
</pre>
<p>
При выполнении данной операции каждый элемент кортежа <code>[%кортеж_1]</code> будет поделён на значение элемента <code>[#значение]</code>. <code>[#значение]</code> может быть только числом. Все остальные варианты приведут к ошибке о несоответствии типов данных. Примеры:
</p>
<p>
</p><pre class="brush: qsp">
%tuple = [4, 10, 16]
%a = %tuple / 2
! %a будет равно [2, 5, 8]

[4, 10] / 'b' &amp; ! ошибка о несоответствии типов данных
</pre>
</div>
<h3 class="sectionedit8" id="operacii_s_prisvaivaniem">Операции с присваиванием</h3>
<div class="level3">
<p>
Операции с присваиванием <code>+=</code>, <code>-=</code>, <code>*=</code> и <code>/=</code> применимы для кортежей.
</p>
<p>
Только в операции <code>+=</code> можно добавлять к элементам кортежей значения любых типов. В операциях <code>-=</code>, <code>*=</code> и <code>/=</code> можно использовать только целые значения.
</p>
<p>
Примеры:
</p>
<p>
</p><pre class="brush: qsp">
%tuple = [5, 10, 15]
%tuple /= 5
! %tuple будет равно [1, 2, 3]
%tuple *= 10
! %tuple будет равно [10, 20, 30]
%tuple -= 10
! %tuple будет равно [0, 10, 20]
%tuple += 13
! %tuple будет равно [13, 23, 33]
</pre>
</div>
<h2 class="sectionedit9" id="funkcii_i_operatory_rabotajuschie_s_kortezhami">Функции и операторы, работающие с кортежами</h2>
<div class="level2">
<ul>
<li class="level1"><div class="li"> <code>LEN([%кор])</code> - возвращает число элементов кортежа <code>[%кор]</code>. <pre class="brush: qsp">
*pl LEN([5,7,'a']) &amp;! на экране будет число 3
</pre></div>
</li>
<li class="level1"><div class="li"> <code>ISNUM([%кор])</code> - проверяет, можно ли преобразовать <code>[%кор]</code> в число. Функция возвращает <code>0</code> (ложь) или <code>1</code> (истина). <pre class="brush: qsp">
ISNUM([' 9999 ']) &amp;! 1
ISNUM([' -888'])  &amp;! 1
ISNUM(['777a6'])  &amp;! 0
ISNUM(['']) &amp;! 0, т.к пустая строка не содержит числа
ISNUM(['1', '1']) &amp;! 0, т.к. кортеж из двух значений
ISNUM([1, 1]) &amp;! 0, т.к. кортеж из двух значений
</pre></div>
</li>
<li class="level1"><div class="li"> <code>VAL([%кор])</code> - переводит кортеж <code>[%кор]</code> в соответствующее число. Если преобразование невозможно, возвращает <code>0</code>. <pre class="brush: qsp">
val(['123']) &amp; ! увидим 123
val(['']) &amp; ! увидим 0
val(['1', 1]) &amp; ! увидим 0
</pre></div>
</li>
<li class="level1"><div class="li"> <code>$STR([%кор])</code> - переводит кортеж в строку. <pre class="brush: qsp">
*pl $STR([5,7,'a']) &amp;! на экране увидим [5,7,'a']
</pre></div>
</li>
<li class="level1"><div class="li"> <code id="func_ARRPACK">%ARRPACK([$имя_массива], [#начальный_индекс], [#количество])</code> - упаковывает массив <code>[$имя_массива]</code> в кортеж.</div>
<ul>
<li class="level2"><div class="li"> Можно указать, сколько элементов <code>[#количество]</code> упаковать в кортеж, и с какого элемента <code>[#начальный_индекс]</code> начинать упаковку. Параметры опциональны, по умолчанию <code>[#начальный_индекс]</code> равен нулю, а <code>[#количество]</code> соответствует размеру массива.</div>
</li>
<li class="level2"><div class="li"> Функция возвращает кортеж с упакованными значениями. </div>
</li>
<li class="level2"><div class="li"> Примеры: <pre class="brush: qsp">
LOCAL type, name = %ARRPACK('args')
! Из массива char берём пять элементов, начиная со второго, и упаковываем в кортеж:
%unit[123] = %ARRPACK('char', 2, 5)
</pre></div>
</li>
</ul>
</li>
<li class="level1"><div class="li"> <code id="statement_UNPACKARR">UNPACKARR [$имя_массива], [%кортеж], [#начальный_индекс], [#количество]</code> - распаковывает значения из кортежа <code>[%кортеж]</code> в массив <code>[$имя_массива]</code>. </div>
<ul>
<li class="level2"><div class="li"> Можно указать, сколько элементов <code>[#количество]</code> распаковать, и с какого элемента <code>[#начальный_индекс]</code> начинать распаковку. Параметры опциональны, по умолчанию <code>[#начальный_индекс]</code> равен нулю, а <code>[#количество]</code> соответствует длине кортежа.</div>
</li>
<li class="level2"><div class="li"> Пример: <pre class="brush: qsp">
UNPACKARR 'A', ['тест','нескольких','значений',67, ['вложенный кортеж']]
! $A[0] будет содержать 'тест'
! $A[1] будет содержать 'нескольких'
! $A[2] будет содержать 'значений'
! A[3] будет содержать 67
! %A[4] будет содержать ['вложенный кортеж']
</pre></div>
</li>
<li class="level2"><div class="li"> оператор позволяет извлечь из кортежа одно значение по указанному индексу: <pre class="brush: qsp">
%tpl = ['тест','нескольких','значений',67, ['вложенный кортеж']]
UNPACKARR 'A', %tpl, 3, 1
! в A будет 67
</pre></div>
</li>
</ul>
</li>
</ul>
</div>
<h2 class="sectionedit10" id="indeksacija_jacheek_massivov_cherez_kortezhi">Индексация ячеек массивов через кортежи</h2>
<div class="level2">
<p>
Мы можем индексировать ячейки массивов с помощью кортежей, точно так же, как и с помощью строк. При этом повторяющиеся квадратные скобки можно и нужно опускать для лучшей читаемости кода. Таким образом можно создавать многомерные массивы:
</p>
<p>
</p><pre class="brush: qsp">
! многомерный массив:
$map[1,2] = 'space'
$map[1,3] = 'space'
$map[5,7] = 'tree'
$map[0,-1] = 'hero'
*pl $map[x,y]

! можно, но не рекомендуется,
! писать так:
$map[[1,2]] = 'space'
$map[[1,3]] = 'space'
$map[[5,7]] = 'tree'
$map[[0,-1]] = 'hero'
*pl $map[[x,y]]
</pre>
<p>
Почитать про многомерные массивы можно в соответствующем подразделе раздела <a class="wikilink1" href="help_arrays.htm" title="help:arrays">“Массивы”</a>.
</p>
<p>
Опускать повторяющиеся скобки нельзя, если для индексации используются кортежи, состоящие из одного значения.
</p>
</div>
<h2 class="sectionedit11" id="kortezh_iz_odnogo_znachenija">Кортеж из одного значения</h2>
<div class="level2">
<p>
В <strong>QSP</strong> 5.9.0 появилась возможность создавать кортежи из одного значения. Например:
</p>
<p>
</p><pre class="brush: qsp">
%tuple = [-1]
*pl %tuple &amp; ! [-1]
</pre>
<p>
С помощью таких кортежей можно индексировать массивы, обходя ограничение на отрицательные индексы ячеек. Но в этом случае необходимо сохранять повторяющиеся квадратные скобки:
</p>
<p>
</p><pre class="brush: qsp">
$line_map[[-1]] = 'personage'
*pl $line_map[[-1]]
</pre>
</div>
<h2 class="sectionedit12" id="vozvraschenie_neskolkix_znachenij_iz_funkcii">Возвращение нескольких значений из функции</h2>
<div class="level2">
<p>
Поскольку кортежи позволяют упаковывать в переменную несколько значений, появилась возможность возвращать из пользовательской функции сразу несколько значений, используя распаковку:
</p>
<p>
</p><pre class="brush: qsp">
!foo
%result = [12, 45]

!start
x, y = @foo()
</pre>
</div>
<h2 class="sectionedit13" id="ogranichenija_kortezhej">Ограничения кортежей</h2>
<div class="level2">
<ul>
<li class="level1"><div class="li"> Используя лишь одну пару квадратных скобок нельзя создать кортеж из более чем двадцати элементов. Пример попытки создать кортеж из 21 элемента: <pre class="brush: qsp">
%tpl = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]
! это приведёт к ошибке: Неверное число аргументов операции/функции
</pre> Однако вы можете создать кортеж, сколько угодно большой длины, используя конкатенацию: <pre class="brush: qsp">
%tpl = ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20] &amp; [21])
</pre> <strong>Настоятельно не рекомендуется</strong> создавать кортежи большой длины.</div>
</li>
<li class="level1"><div class="li"> Кортежи нельзя изменять. То есть, например, в кортеже из трёх элементов нельзя заменить второй элемент. Нужно распаковать кортеж в переменные, изменить одну из переменных и снова упаковать в кортеж: <pre class="brush: qsp">
%pos_in_space = [12, -3, 9]
x, y, z = %pos_in_space
y = -13
%pos_in_space = [x, y, z]
</pre></div>
</li>
<li class="level1"><div class="li"> Нельзя извлечь из кортежа одно конкретное значение, например, второе. Зато можно извлекать одно или несколько первых значений. В этом случае из набора переменных, в которые распаковывается кортеж, имя последней должно начинаться с символа <code>%</code>, так как в эту переменную будет упаковываться оставшаяся часть кортежа: <pre class="brush: qsp">
%personage = ["Петя", 27, 182, 92, "боксёр"]
$name, %tale = %personage
*pl $name &amp;! 'Петя'
$name, age, height, %tale = %personage
*pl "Имя: &lt;&lt;$name&gt;&gt;, возраст: &lt;&lt;age&gt;&gt;, рост: &lt;&lt;height&gt;&gt;."
weight, $sports = %tale
*pl $sports
</pre></div>
</li>
<li class="level1"><div class="li"> Как и в строках, предел объёмов данных для кортежа 2 Гигабайта или <strong>2147483648</strong> элементов. Величина кортежа не может превысить объём оперативной памяти.</div>
</li>
</ul>
<p>
<a class="wikilink1" href="help_conditional.htm" title="help:conditional">Вперёд: Условия</a>
</p>
</div>

<!-- wikipage stop -->
</div></body>
</html>