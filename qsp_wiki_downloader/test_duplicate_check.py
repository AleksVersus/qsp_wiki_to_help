#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
"""

from qsp_wiki_downloader import WikiDownloader

def test_duplicate_check():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"""
    downloader = WikiDownloader()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    test_images = [
        "https://wiki.qsp.org/images/logo.png",
        "https://wiki.qsp.org/images/logo.png",  # –î—É–±–ª–∏–∫–∞—Ç
        "https://wiki.qsp.org/images/logo.png",  # –ï—â–µ –æ–¥–∏–Ω –¥—É–±–ª–∏–∫–∞—Ç
        "https://wiki.qsp.org/images/test.jpg",
        "https://wiki.qsp.org/images/test.jpg"   # –î—É–±–ª–∏–∫–∞—Ç
    ]
    
    print("–¢–µ—Å—Ç–∏—Ä—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...")
    
    for i, image_url in enumerate(test_images, 1):
        print(f"\n{i}. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é: {image_url}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–µ —Å–∫–∞—á–∞–Ω–Ω—ã—Ö
        if image_url in downloader.downloaded_images:
            print(f"   ‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–∂–µ –≤ —Å–ø–∏—Å–∫–µ —Å–∫–∞—á–∞–Ω–Ω—ã—Ö")
        else:
            print(f"   üîç –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–≤–æ–µ, —Å–∫–∞—á–∏–≤–∞—é...")
            success = downloader.download_image(image_url)
            if success:
                print(f"   ‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω–æ")
            else:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏")
    
    print(f"\n–†–µ–∑—É–ª—å—Ç–∞—Ç:")
    print(f"  - –í—Å–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–µ: {len(downloader.downloaded_images)}")
    print(f"  - –°–ø–∏—Å–æ–∫ —Å–∫–∞—á–∞–Ω–Ω—ã—Ö:")
    for url in downloader.downloaded_images:
        print(f"    * {url}")

if __name__ == "__main__":
    test_duplicate_check()
